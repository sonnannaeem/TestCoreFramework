{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18820\viewh12160\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs22 \cf2 \CocoaLigature0 In Terminal cd to the root folder of the Framework project\
\
Archive for iOS
\f1\b0 \
\
xcodebuild archive \\\
-scheme TestCoreFramework \\\
-configuration Release \\\
-destination 'generic/platform=iOS' \\\
-archivePath './build/TestCoreFramework.framework-iphoneos.xcarchive' \\\
SKIP_INSTALL=NO \\\
BUILD_LIBRARY_FOR_DISTRIBUTION=YES\
\
\

\f0\b Archive for Simulator
\f1\b0 \
\
xcodebuild archive \\\
-scheme TestCoreFramework \\\
-configuration Release \\\
-destination 'generic/platform=iOS Simulator' \\\
-archivePath './build/TestCoreFramework.framework-iphonesimulator.xcarchive' \\\
SKIP_INSTALL=NO \\\
BUILD_LIBRARY_FOR_DISTRIBUTION=YES\
\
\

\f0\b Archive for macOS
\f1\b0 \
\
xcodebuild archive \\\
-scheme TestCoreFramework \\\
-configuration Release \\\
-destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst' \\\
-archivePath './build/TestCoreFramework.framework-catalyst.xcarchive' \\\
SKIP_INSTALL=NO \\\
BUILD_LIBRARY_FOR_DISTRIBUTION=YES\
\
\

\f0\b Create Framework
\f1\b0 \
\
xcodebuild -create-xcframework \\\
-framework './build/TestCoreFramework.framework-iphonesimulator.xcarchive/Products/Library/Frameworks/TestCoreFramework.framework' \\\
-framework './build/TestCoreFramework.framework-iphoneos.xcarchive/Products/Library/Frameworks/TestCoreFramework.framework' \\\
-framework './build/TestCoreFramework.framework-catalyst.xcarchive/Products/Library/Frameworks/TestCoreFramework.framework' \\\
-output './build/TestCoreFramework.xcframework'\
\

\f0\b All in one
\f1\b0 \
\
xcodebuild archive \\\
-scheme TestCoreFramework \\\
-configuration Release \\\
-destination 'generic/platform=iOS' \\\
-archivePath './build/TestCoreFramework.framework-iphoneos.xcarchive' \\\
SKIP_INSTALL=NO \\\
BUILD_LIBRARY_FOR_DISTRIBUTION=YES\
xcodebuild archive \\\
-scheme TestCoreFramework \\\
-configuration Release \\\
-destination 'generic/platform=iOS Simulator' \\\
-archivePath './build/TestCoreFramework.framework-iphonesimulator.xcarchive' \\\
SKIP_INSTALL=NO \\\
BUILD_LIBRARY_FOR_DISTRIBUTION=YES\
xcodebuild archive \\\
-scheme TestCoreFramework \\\
-configuration Release \\\
-destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst' \\\
-archivePath './build/TestCoreFramework.framework-catalyst.xcarchive' \\\
SKIP_INSTALL=NO \\\
BUILD_LIBRARY_FOR_DISTRIBUTION=YES\
xcodebuild -create-xcframework \\\
-framework './build/TestCoreFramework.framework-iphonesimulator.xcarchive/Products/Library/Frameworks/TestCoreFramework.framework' \\\
-framework './build/TestCoreFramework.framework-iphoneos.xcarchive/Products/Library/Frameworks/TestCoreFramework.framework' \\\
-framework './build/TestCoreFramework.framework-catalyst.xcarchive/Products/Library/Frameworks/TestCoreFramework.framework' \\\
-output './build/TestCoreFramework.xcframework'\

\f0\b \
\
Set up Package file in the Swift Package project
\f1\b0 \
\
// swift-tools-version: 5.6\
// The swift-tools-version declares the minimum version of Swift required to build this package.\
\
import PackageDescription\
\
let package = Package(\
    name: "TestCoreFramework",\
    platforms: [\
      .macOS(.v12), .iOS(.v15)\
    ],\
    products: [\
        // Products define the executables and libraries a package produces, and make them visible to other packages.\
        .library(\
            name: "TestCoreFramework",\
            targets: ["TestCoreFramework"]),\
    ],\
    dependencies: [\
        // Dependencies declare other packages that this package depends on.\
        // .package(url: /* package url */, from: "1.0.0"),\
    ],\
    targets: [\
        // Targets are the basic building blocks of a package. A target can define a module or a test suite.\
        // Targets can depend on other targets in this package, and on products in packages this package depends on.\
        .binaryTarget(\
            name: "TestCoreFramework",\
            path: "./Sources/TestCoreFramework.xcframework")\
    ]\
)}